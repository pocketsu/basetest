<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	<context:component-scan base-package="com.sz" annotation-config="true" />

	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
				<value>classpath:redis.properties</value>
			</list>
		</property>
	</bean>

	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${driver_class}" />
		<property name="url" value="${database_url}" />
		<property name="username" value="${database_username}" />
		<property name="password" value="${database_password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${conn_initialPoolSize}" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="${conn_maxPoolSize}" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${conn_minPoolSize}" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${conn_maxWait}" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${conn_timeBetweenEvictionRunsMillis}" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${conn_minEvictableIdleTimeMillis}" />

		<property name="validationQuery" value="${hibernate.validationQuery}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />
		<!-- 监控数据库 -->
		<property name="filters" value="stat" />
	</bean>
	
     <!-- mybatis sqlSessionFactory -->
     <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
     	<property name="dataSource" ref="dataSource"></property>
     	<property name="configLocation" value="classpath:mybatis-config.xml"></property>
     	<property name="mapperLocations">
     		<list>
     			<value>classpath*:com/sz/*/dao/mybatis/xml/*.xml</value>
     			<value>classpath*:com/sz/*/dao/xml/*.xml</value>
     		</list>
     	</property>
     </bean>
     
     <!-- mybatis sqlSession -->
     <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
     	<constructor-arg index="0" ref="sqlSessionFactory"/>
     </bean>
     
     <!-- mybatis mapper扫描 -->
     <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
     <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
     	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
     	<property name="basePackage" value="com.sz.*.dao" />
     </bean>
	 
	 <!-- spring jdbcTemplate对象 -->
	 <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	 </bean>
	 
	 <!-- spring namedParameterJdbcTemplate对象 -->
	 <bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="dataSource" />
	 </bean>
	 
	 <!-- hibernate sessionFactory -->
	 <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.sz.*.pojo"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>
     
     
     <!-- 事务 -->
     <bean id="testTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
		<property name="nestedTransactionAllowed" value="true"></property>
	 </bean>
	 <tx:annotation-driven transaction-manager="testTransactionManager" proxy-target-class="true" />
	 
	 <aop:aspectj-autoproxy proxy-target-class="true" />
	
</beans>